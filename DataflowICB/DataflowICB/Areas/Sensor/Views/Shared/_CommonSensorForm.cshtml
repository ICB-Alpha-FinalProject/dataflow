@{
    Layout = null;
}

@model SensorViewModel

    <div class="form-group">
        @Html.LabelFor(m => m.Name)
        @Html.EditorFor(m => m.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Name, null, new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Description)
        @Html.EditorFor(m => m.Description, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.PollingInterval)
        @Html.EditorFor(m => m.PollingInterval, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.PollingInterval, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.MeasurementType, "Measure in " + Model.MeasurementType)

        @if (Model.ValueTypeSensor != null)
        {
            @Html.EditorFor(m => m.ValueTypeSensor.CurrentValue, new { @class = "form-control" })
        }
        else
        {
            @Html.EditorFor(m => m.BoolTypeSensor.CurrentValue, new { @class = "form-control" })
        }
        @Html.ValidationMessageFor(m => m.MeasurementType, "", new { @class = "text-danger" })
    </div>


<div class="form-group">
    @Html.LabelFor(m => m.IsPublic)
    @Html.EditorFor(m => m.IsPublic, new { @class = "form-control" })
    @Html.ValidationMessageFor(m => m.IsPublic, "", new { @class = "text-danger" })
</div>

@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryajax")
}
